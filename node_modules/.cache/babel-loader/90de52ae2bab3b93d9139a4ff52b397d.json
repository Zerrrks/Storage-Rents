{"ast":null,"code":"import _objectSpread from\"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _defineProperty from\"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import classNames from\"classnames\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";import MenuItem from\"@material-ui/core/MenuItem\";import MenuList from\"@material-ui/core/MenuList\";import Grow from\"@material-ui/core/Grow\";import Paper from\"@material-ui/core/Paper\";import ClickAwayListener from\"@material-ui/core/ClickAwayListener\";import Hidden from\"@material-ui/core/Hidden\";import Poppers from\"@material-ui/core/Popper\";import Divider from\"@material-ui/core/Divider\";// @material-ui/icons\nimport Person from\"@material-ui/icons/Person\";//import Notifications from \"@material-ui/icons/Notifications\";\n//import Dashboard from \"@material-ui/icons/Dashboard\";\n//import Search from \"@material-ui/icons/Search\";\n// core components\n//import CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from\"components/CustomButtons/Button.js\";import styles from\"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(styles);export default function AdminNavbarLinks(){var classes=useStyles();//  const [openNotification, setOpenNotification] = React.useState(null);\nvar _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),openProfile=_React$useState2[0],setOpenProfile=_React$useState2[1];/*  const handleClickNotification = (event) => {\r\n    if (openNotification && openNotification.contains(event.target)) {\r\n      setOpenNotification(null);\r\n    } else {\r\n      setOpenNotification(event.currentTarget);\r\n    }\r\n  };\r\n  const handleCloseNotification = () => {\r\n    setOpenNotification(null);\r\n  };\r\n  */var handleClickProfile=function handleClickProfile(event){if(openProfile&&openProfile.contains(event.target)){setOpenProfile(null);}else{setOpenProfile(event.currentTarget);}};var handleCloseProfile=function handleCloseProfile(){setOpenProfile(null);};/*  <div className={classes.searchWrapper}>\r\n        <CustomInput\r\n          formControlProps={{\r\n            className: classes.margin + \" \" + classes.search,\r\n          }}\r\n          inputProps={{\r\n            placeholder: \"Search\",\r\n            inputProps: {\r\n              \"aria-label\": \"Search\",\r\n            },\r\n          }}\r\n        />\r\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\r\n          <Search />\r\n        </Button>\r\n      </div>\r\n      <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        justIcon={window.innerWidth > 959}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-label=\"Dashboard\"\r\n        className={classes.buttonLink}\r\n      >\r\n        <Dashboard className={classes.icons} />\r\n        <Hidden mdUp implementation=\"css\">\r\n          <p className={classes.linkText}>Dashboard</p>\r\n        </Hidden>\r\n      </Button>\r\n            \r\n      <div className={classes.manager}>\r\n        <Button\r\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n          justIcon={window.innerWidth > 959}\r\n          simple={!(window.innerWidth > 959)}\r\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClickNotification}\r\n          className={classes.buttonLink}\r\n        >\r\n          <Notifications className={classes.icons} />\r\n          <span className={classes.notifications}>5</span>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <p onClick={handleCloseNotification} className={classes.linkText}>\r\n              Notification\r\n            </p>\r\n          </Hidden>\r\n        </Button>\r\n        <Poppers\r\n          open={Boolean(openNotification)}\r\n          anchorEl={openNotification}\r\n          transition\r\n          disablePortal\r\n          className={\r\n            classNames({ [classes.popperClose]: !openNotification }) +\r\n            \" \" +\r\n            classes.popperNav\r\n          }\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              id=\"notification-menu-list-grow\"\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleCloseNotification}>\r\n                  <MenuList role=\"menu\">\r\n                    <MenuItem\r\n                      onClick={handleCloseNotification}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Johnny Sinner responded to your storage request\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleCloseNotification}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      There are 2 new listings in your area\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleCloseNotification}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      You{\"'\"}re now friend with Sasha\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleCloseNotification}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Another Notification\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleCloseNotification}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Another One\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Poppers>\r\n      </div>\r\n      This ALL goes right after first div down below\r\n      */return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:classes.manager,children:[/*#__PURE__*/_jsxs(Button,{color:window.innerWidth>959?\"transparent\":\"white\",justIcon:window.innerWidth>959,simple:!(window.innerWidth>959),\"aria-owns\":openProfile?\"profile-menu-list-grow\":null,\"aria-haspopup\":\"true\",onClick:handleClickProfile,className:classes.buttonLink,children:[/*#__PURE__*/_jsx(Person,{className:classes.icons}),/*#__PURE__*/_jsx(Hidden,{mdUp:true,implementation:\"css\",children:/*#__PURE__*/_jsx(\"p\",{className:classes.linkText,children:\"Profile\"})})]}),/*#__PURE__*/_jsx(Poppers,{open:Boolean(openProfile),anchorEl:openProfile,transition:true,disablePortal:true,className:classNames(_defineProperty({},classes.popperClose,!openProfile))+\" \"+classes.popperNav,children:function children(_ref){var TransitionProps=_ref.TransitionProps,placement=_ref.placement;return/*#__PURE__*/_jsx(Grow,_objectSpread(_objectSpread({},TransitionProps),{},{id:\"profile-menu-list-grow\",style:{transformOrigin:placement===\"bottom\"?\"center top\":\"center bottom\"},children:/*#__PURE__*/_jsx(Paper,{children:/*#__PURE__*/_jsx(ClickAwayListener,{onClickAway:handleCloseProfile,children:/*#__PURE__*/_jsxs(MenuList,{role:\"menu\",children:[/*#__PURE__*/_jsx(MenuItem,{onClick:handleCloseProfile,className:classes.dropdownItem,children:/*#__PURE__*/_jsx(\"a\",{href:\"/admin/user\",children:\"Profile\"})}),/*#__PURE__*/_jsx(MenuItem,{onClick:handleCloseProfile,className:classes.dropdownItem,children:/*#__PURE__*/_jsx(\"a\",{href:\"/admin/storage\",children:\"Storage\"})}),/*#__PURE__*/_jsx(Divider,{light:true}),/*#__PURE__*/_jsx(MenuItem,{onClick:handleCloseProfile,className:classes.dropdownItem,children:\"Logout\"})]})})})}));}})]})});}","map":{"version":3,"sources":["C:/Users/nbins/Documents/GitHub/SRSRSR/Template/src/components/Navbars/AdminNavbarLinks.js"],"names":["React","classNames","makeStyles","MenuItem","MenuList","Grow","Paper","ClickAwayListener","Hidden","Poppers","Divider","Person","Button","styles","useStyles","AdminNavbarLinks","classes","useState","openProfile","setOpenProfile","handleClickProfile","event","contains","target","currentTarget","handleCloseProfile","manager","window","innerWidth","buttonLink","icons","linkText","Boolean","popperClose","popperNav","TransitionProps","placement","transformOrigin","dropdownItem"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport Poppers from \"@material-ui/core/Popper\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n// @material-ui/icons\r\nimport Person from \"@material-ui/icons/Person\";\r\n//import Notifications from \"@material-ui/icons/Notifications\";\r\n//import Dashboard from \"@material-ui/icons/Dashboard\";\r\n//import Search from \"@material-ui/icons/Search\";\r\n// core components\r\n//import CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/headerLinksStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function AdminNavbarLinks() {\r\n  const classes = useStyles();\r\n//  const [openNotification, setOpenNotification] = React.useState(null);\r\n  const [openProfile, setOpenProfile] = React.useState(null);\r\n/*  const handleClickNotification = (event) => {\r\n    if (openNotification && openNotification.contains(event.target)) {\r\n      setOpenNotification(null);\r\n    } else {\r\n      setOpenNotification(event.currentTarget);\r\n    }\r\n  };\r\n  const handleCloseNotification = () => {\r\n    setOpenNotification(null);\r\n  };\r\n  */\r\n const handleClickProfile = (event) => {\r\n    if (openProfile && openProfile.contains(event.target)) {\r\n      setOpenProfile(null);\r\n    } else {\r\n      setOpenProfile(event.currentTarget);\r\n    }\r\n  };\r\n  const handleCloseProfile = () => {\r\n    setOpenProfile(null);\r\n  };\r\n/*  <div className={classes.searchWrapper}>\r\n        <CustomInput\r\n          formControlProps={{\r\n            className: classes.margin + \" \" + classes.search,\r\n          }}\r\n          inputProps={{\r\n            placeholder: \"Search\",\r\n            inputProps: {\r\n              \"aria-label\": \"Search\",\r\n            },\r\n          }}\r\n        />\r\n        <Button color=\"white\" aria-label=\"edit\" justIcon round>\r\n          <Search />\r\n        </Button>\r\n      </div>\r\n      <Button\r\n        color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n        justIcon={window.innerWidth > 959}\r\n        simple={!(window.innerWidth > 959)}\r\n        aria-label=\"Dashboard\"\r\n        className={classes.buttonLink}\r\n      >\r\n        <Dashboard className={classes.icons} />\r\n        <Hidden mdUp implementation=\"css\">\r\n          <p className={classes.linkText}>Dashboard</p>\r\n        </Hidden>\r\n      </Button>\r\n            \r\n      <div className={classes.manager}>\r\n        <Button\r\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n          justIcon={window.innerWidth > 959}\r\n          simple={!(window.innerWidth > 959)}\r\n          aria-owns={openNotification ? \"notification-menu-list-grow\" : null}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClickNotification}\r\n          className={classes.buttonLink}\r\n        >\r\n          <Notifications className={classes.icons} />\r\n          <span className={classes.notifications}>5</span>\r\n          <Hidden mdUp implementation=\"css\">\r\n            <p onClick={handleCloseNotification} className={classes.linkText}>\r\n              Notification\r\n            </p>\r\n          </Hidden>\r\n        </Button>\r\n        <Poppers\r\n          open={Boolean(openNotification)}\r\n          anchorEl={openNotification}\r\n          transition\r\n          disablePortal\r\n          className={\r\n            classNames({ [classes.popperClose]: !openNotification }) +\r\n            \" \" +\r\n            classes.popperNav\r\n          }\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              id=\"notification-menu-list-grow\"\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleCloseNotification}>\r\n                  <MenuList role=\"menu\">\r\n                    <MenuItem\r\n                      onClick={handleCloseNotification}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Johnny Sinner responded to your storage request\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleCloseNotification}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      There are 2 new listings in your area\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleCloseNotification}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      You{\"'\"}re now friend with Sasha\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleCloseNotification}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Another Notification\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleCloseNotification}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Another One\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Poppers>\r\n      </div>\r\n      This ALL goes right after first div down below\r\n      */\r\n  return (\r\n    <div>\r\n\r\n      <div className={classes.manager}>\r\n        <Button\r\n          color={window.innerWidth > 959 ? \"transparent\" : \"white\"}\r\n          justIcon={window.innerWidth > 959}\r\n          simple={!(window.innerWidth > 959)}\r\n          aria-owns={openProfile ? \"profile-menu-list-grow\" : null}\r\n          aria-haspopup=\"true\"\r\n          onClick={handleClickProfile}\r\n          className={classes.buttonLink}\r\n        >\r\n          <Person className={classes.icons} />\r\n          <Hidden mdUp implementation=\"css\">\r\n            <p className={classes.linkText}>Profile</p>\r\n          </Hidden>\r\n        </Button>\r\n        <Poppers\r\n          open={Boolean(openProfile)}\r\n          anchorEl={openProfile}\r\n          transition\r\n          disablePortal\r\n          className={\r\n            classNames({ [classes.popperClose]: !openProfile }) +\r\n            \" \" +\r\n            classes.popperNav\r\n          }\r\n        >\r\n          {({ TransitionProps, placement }) => (\r\n            <Grow\r\n              {...TransitionProps}\r\n              id=\"profile-menu-list-grow\"\r\n              style={{\r\n                transformOrigin:\r\n                  placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n              }}\r\n            >\r\n              <Paper>\r\n                <ClickAwayListener onClickAway={handleCloseProfile}>\r\n                  <MenuList role=\"menu\">\r\n                    <MenuItem\r\n                      onClick={handleCloseProfile}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      <a href=\"/admin/user\">\r\n                      Profile\r\n                      </a>\r\n                    </MenuItem>\r\n                    <MenuItem\r\n                      onClick={handleCloseProfile}\r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      <a href=\"/admin/storage\">\r\n                      Storage\r\n                      </a>\r\n                    </MenuItem>\r\n                    <Divider light />\r\n                    <MenuItem\r\n                      onClick={handleCloseProfile} \r\n                      className={classes.dropdownItem}\r\n                    >\r\n                      Logout\r\n                    </MenuItem>\r\n                  </MenuList>\r\n                </ClickAwayListener>\r\n              </Paper>\r\n            </Grow>\r\n          )}\r\n        </Poppers>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}