{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps[\"native\"] ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","map":{"version":3,"sources":["C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@material-ui/core/esm/TablePagination/TablePagination.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","chainPropTypes","clsx","withStyles","InputBase","MenuItem","Select","TableCell","Toolbar","Typography","TablePaginationActions","useId","styles","theme","root","color","palette","text","primary","fontSize","typography","pxToRem","overflow","padding","toolbar","minHeight","paddingRight","spacer","flex","caption","flexShrink","selectRoot","marginRight","marginLeft","select","paddingLeft","textAlign","textAlignLast","selectIcon","input","menuItem","actions","defaultLabelDisplayedRows","_ref","from","to","count","concat","defaultRowsPerPageOptions","TablePagination","forwardRef","props","ref","_props$ActionsCompone","ActionsComponent","backIconButtonProps","_props$backIconButton","backIconButtonText","classes","className","colSpanProp","colSpan","_props$component","component","Component","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","nextIconButtonProps","_props$nextIconButton","nextIconButtonText","onChangePage","onChangeRowsPerPage","page","rowsPerPage","_props$rowsPerPageOpt","rowsPerPageOptions","_props$SelectProps","SelectProps","other","selectId","labelId","MenuItemComponent","createElement","length","variant","id","icon","value","onChange","map","rowsPerPageOption","key","label","Math","min","title","process","env","NODE_ENV","propTypes","elementType","object","string","isRequired","number","func","node","newLastPage","max","ceil","Error","array","name"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onChangeRowsPerPage = props.onChangeRowsPerPage,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onChangeRowsPerPage\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onChangeRowsPerPage: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);"]},"metadata":{},"sourceType":"module"}