{"ast":null,"code":"import _defineProperty from \"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nbins\\\\Documents\\\\GitHub\\\\SRSRSR\\\\Template\\\\src\\\\components\\\\Sidebar\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\n/*eslint-disable*/\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink, useLocation } from \"react-router-dom\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Icon from \"@material-ui/core/Icon\";\nimport logo from 'assets/img/srlogo.gif'; // core components\n\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\nexport default function Sidebar(props) {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n  var location = useLocation(); // verifies if routeName is the one active (in browser input)\n\n  function activeRoute(routeName) {\n    return location.pathname === routeName;\n  }\n\n  var color = props.color,\n      image = props.image,\n      logoText = props.logoText,\n      routes = props.routes;\n\n  var links = /*#__PURE__*/_jsxDEV(List, {\n    className: classes.list,\n    children: routes.map(function (prop, key) {\n      var activePro = \" \";\n      var listItemClasses;\n\n      if (prop.path === \"/upgrade-to-pro\") {\n        activePro = classes.activePro + \" \";\n        listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], true));\n      } else {\n        listItemClasses = classNames(_defineProperty({}, \" \" + classes[color], activeRoute(prop.layout + prop.path)));\n      }\n\n      var whiteFontClasses = classNames(_defineProperty({}, \" \" + classes.whiteFont, activeRoute(prop.layout + prop.path)));\n      return /*#__PURE__*/_jsxDEV(NavLink, {\n        to: prop.layout + prop.path,\n        className: activePro + classes.item,\n        activeClassName: \"active\",\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          className: classes.itemLink + listItemClasses,\n          children: [typeof prop.icon === \"string\" ? /*#__PURE__*/_jsxDEV(Icon, {\n            className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive)),\n            children: prop.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, _this) : /*#__PURE__*/_jsxDEV(prop.icon, {\n            className: classNames(classes.itemIcon, whiteFontClasses, _defineProperty({}, classes.itemIconRTL, props.rtlActive))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: props.rtlActive ? prop.rtlName : prop.name,\n            className: classNames(classes.itemText, whiteFontClasses, _defineProperty({}, classes.itemTextRTL, props.rtlActive)),\n            disableTypography: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, _this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n\n  var brand = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.logo,\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      src: logo,\n      className: classNames(classes.logoLink, _defineProperty({}, classes.logoLinkRTL, props.rtlActive)),\n      target: \"_blank\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: \"logo\",\n          className: classes.img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \"Storage Rents\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Hidden, {\n      mdUp: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        variant: \"temporary\",\n        anchor: props.rtlActive ? \"left\" : \"right\",\n        open: props.open,\n        classes: {\n          paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n        },\n        onClose: props.handleDrawerToggle,\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n\n        },\n        children: [brand, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sidebarWrapper,\n          children: [props.rtlActive ? /*#__PURE__*/_jsxDEV(RTLNavbarLinks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(AdminNavbarLinks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 53\n          }, this), links]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), image !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.background,\n          style: {\n            backgroundImage: \"url(\" + image + \")\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n      smDown: true,\n      implementation: \"css\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        anchor: props.rtlActive ? \"right\" : \"left\",\n        variant: \"permanent\",\n        open: true,\n        classes: {\n          paper: classNames(classes.drawerPaper, _defineProperty({}, classes.drawerPaperRTL, props.rtlActive))\n        },\n        children: [brand, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.sidebarWrapper,\n          children: links\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), image !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.background,\n          style: {\n            backgroundImage: \"url(\" + image + \")\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Sidebar, \"iVCX2yDQgo1lOrIkgS31pg3flb4=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = Sidebar;\nSidebar.propTypes = {\n  rtlActive: PropTypes.bool,\n  handleDrawerToggle: PropTypes.func,\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\n  logo: PropTypes.string,\n  image: PropTypes.string,\n  logoText: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  open: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/nbins/Documents/GitHub/SRSRSR/Template/src/components/Sidebar/Sidebar.js"],"names":["React","classNames","PropTypes","NavLink","useLocation","makeStyles","Drawer","Hidden","List","ListItem","ListItemText","Icon","logo","AdminNavbarLinks","RTLNavbarLinks","styles","useStyles","Sidebar","props","classes","location","activeRoute","routeName","pathname","color","image","logoText","routes","links","list","map","prop","key","activePro","listItemClasses","path","layout","whiteFontClasses","whiteFont","item","itemLink","icon","itemIcon","itemIconRTL","rtlActive","rtlName","name","itemText","itemTextRTL","brand","logoLink","logoLinkRTL","logoImage","img","open","paper","drawerPaper","drawerPaperRTL","handleDrawerToggle","keepMounted","sidebarWrapper","undefined","background","backgroundImage","propTypes","bool","func","bgColor","oneOf","string","arrayOf","object"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,kBAArC,C,CACA;;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,uBAAjB,C,CACA;;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AAEA,OAAOC,MAAP,MAAmB,gEAAnB;;AAEA,IAAMC,SAAS,GAAGX,UAAU,CAACU,MAAD,CAA5B;AACA,eAAe,SAASE,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AAAA;;AACrC,MAAMC,OAAO,GAAGH,SAAS,EAAzB;AACA,MAAII,QAAQ,GAAGhB,WAAW,EAA1B,CAFqC,CAGrC;;AACA,WAASiB,WAAT,CAAqBC,SAArB,EAAgC;AAC9B,WAAOF,QAAQ,CAACG,QAAT,KAAsBD,SAA7B;AACD;;AAED,MAAQE,KAAR,GAA2CN,KAA3C,CAAQM,KAAR;AAAA,MAAeC,KAAf,GAA2CP,KAA3C,CAAeO,KAAf;AAAA,MAAsBC,QAAtB,GAA2CR,KAA3C,CAAsBQ,QAAtB;AAAA,MAAgCC,MAAhC,GAA2CT,KAA3C,CAAgCS,MAAhC;;AACA,MAAIC,KAAK,gBACP,QAAC,IAAD;AAAM,IAAA,SAAS,EAAET,OAAO,CAACU,IAAzB;AAAA,cACGF,MAAM,CAACG,GAAP,CAAW,UAACC,IAAD,EAAOC,GAAP,EAAe;AACzB,UAAIC,SAAS,GAAG,GAAhB;AACA,UAAIC,eAAJ;;AACA,UAAIH,IAAI,CAACI,IAAL,KAAc,iBAAlB,EAAqC;AACnCF,QAAAA,SAAS,GAAGd,OAAO,CAACc,SAAR,GAAoB,GAAhC;AACAC,QAAAA,eAAe,GAAGjC,UAAU,qBACzB,MAAMkB,OAAO,CAACK,KAAD,CADY,EACF,IADE,EAA5B;AAGD,OALD,MAKO;AACLU,QAAAA,eAAe,GAAGjC,UAAU,qBACzB,MAAMkB,OAAO,CAACK,KAAD,CADY,EACFH,WAAW,CAACU,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IAApB,CADT,EAA5B;AAGD;;AACD,UAAME,gBAAgB,GAAGpC,UAAU,qBAChC,MAAMkB,OAAO,CAACmB,SADkB,EACNjB,WAAW,CAACU,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IAApB,CADL,EAAnC;AAGA,0BACE,QAAC,OAAD;AACE,QAAA,EAAE,EAAEJ,IAAI,CAACK,MAAL,GAAcL,IAAI,CAACI,IADzB;AAEE,QAAA,SAAS,EAAEF,SAAS,GAAGd,OAAO,CAACoB,IAFjC;AAGE,QAAA,eAAe,EAAC,QAHlB;AAAA,+BAME,QAAC,QAAD;AAAU,UAAA,MAAM,MAAhB;AAAiB,UAAA,SAAS,EAAEpB,OAAO,CAACqB,QAAR,GAAmBN,eAA/C;AAAA,qBACG,OAAOH,IAAI,CAACU,IAAZ,KAAqB,QAArB,gBACC,QAAC,IAAD;AACE,YAAA,SAAS,EAAExC,UAAU,CAACkB,OAAO,CAACuB,QAAT,EAAmBL,gBAAnB,sBAClBlB,OAAO,CAACwB,WADU,EACIzB,KAAK,CAAC0B,SADV,EADvB;AAAA,sBAKGb,IAAI,CAACU;AALR;AAAA;AAAA;AAAA;AAAA,mBADD,gBASC,QAAC,IAAD,CAAM,IAAN;AACE,YAAA,SAAS,EAAExC,UAAU,CAACkB,OAAO,CAACuB,QAAT,EAAmBL,gBAAnB,sBAClBlB,OAAO,CAACwB,WADU,EACIzB,KAAK,CAAC0B,SADV;AADvB;AAAA;AAAA;AAAA;AAAA,mBAVJ,eAgBE,QAAC,YAAD;AACE,YAAA,OAAO,EAAE1B,KAAK,CAAC0B,SAAN,GAAkBb,IAAI,CAACc,OAAvB,GAAiCd,IAAI,CAACe,IADjD;AAEE,YAAA,SAAS,EAAE7C,UAAU,CAACkB,OAAO,CAAC4B,QAAT,EAAmBV,gBAAnB,sBAClBlB,OAAO,CAAC6B,WADU,EACI9B,KAAK,CAAC0B,SADV,EAFvB;AAKE,YAAA,iBAAiB,EAAE;AALrB;AAAA;AAAA;AAAA;AAAA,mBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF,SAIOZ,GAJP;AAAA;AAAA;AAAA;AAAA,eADF;AAiCD,KAjDA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;;AAsDA,MAAIiB,KAAK,gBACP;AAAK,IAAA,SAAS,EAAE9B,OAAO,CAACP,IAAxB;AAAA,2BACE;AACE,MAAA,GAAG,EAAEA,IADP;AAEE,MAAA,SAAS,EAAEX,UAAU,CAACkB,OAAO,CAAC+B,QAAT,sBAClB/B,OAAO,CAACgC,WADU,EACIjC,KAAK,CAAC0B,SADV,EAFvB;AAKE,MAAA,MAAM,EAAC,QALT;AAAA,8BAOE;AAAK,QAAA,SAAS,EAAEzB,OAAO,CAACiC,SAAxB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAExC,IAAV;AAAgB,UAAA,GAAG,EAAC,MAApB;AAA2B,UAAA,SAAS,EAAEO,OAAO,CAACkC;AAA9C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;;AAgBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,MAAZ;AAAa,MAAA,cAAc,EAAC,KAA5B;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,WADV;AAEE,QAAA,MAAM,EAAEnC,KAAK,CAAC0B,SAAN,GAAkB,MAAlB,GAA2B,OAFrC;AAGE,QAAA,IAAI,EAAE1B,KAAK,CAACoC,IAHd;AAIE,QAAA,OAAO,EAAE;AACPC,UAAAA,KAAK,EAAEtD,UAAU,CAACkB,OAAO,CAACqC,WAAT,sBACdrC,OAAO,CAACsC,cADM,EACWvC,KAAK,CAAC0B,SADjB;AADV,SAJX;AASE,QAAA,OAAO,EAAE1B,KAAK,CAACwC,kBATjB;AAUE,QAAA,UAAU,EAAE;AACVC,UAAAA,WAAW,EAAE,IADH,CACS;;AADT,SAVd;AAAA,mBAcGV,KAdH,eAeE;AAAK,UAAA,SAAS,EAAE9B,OAAO,CAACyC,cAAxB;AAAA,qBACG1C,KAAK,CAAC0B,SAAN,gBAAkB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAAlB,gBAAuC,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,kBAD1C,EAEGhB,KAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF,EAmBGH,KAAK,KAAKoC,SAAV,gBACC;AACE,UAAA,SAAS,EAAE1C,OAAO,CAAC2C,UADrB;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE,SAAStC,KAAT,GAAiB;AAApC;AAFT;AAAA;AAAA;AAAA;AAAA,gBADD,GAKG,IAxBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eA6BE,QAAC,MAAD;AAAQ,MAAA,MAAM,MAAd;AAAe,MAAA,cAAc,EAAC,KAA9B;AAAA,6BACE,QAAC,MAAD;AACE,QAAA,MAAM,EAAEP,KAAK,CAAC0B,SAAN,GAAkB,OAAlB,GAA4B,MADtC;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,IAAI,MAHN;AAIE,QAAA,OAAO,EAAE;AACPW,UAAAA,KAAK,EAAEtD,UAAU,CAACkB,OAAO,CAACqC,WAAT,sBACdrC,OAAO,CAACsC,cADM,EACWvC,KAAK,CAAC0B,SADjB;AADV,SAJX;AAAA,mBAUGK,KAVH,eAWE;AAAK,UAAA,SAAS,EAAE9B,OAAO,CAACyC,cAAxB;AAAA,oBAAyChC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAXF,EAYGH,KAAK,KAAKoC,SAAV,gBACC;AACE,UAAA,SAAS,EAAE1C,OAAO,CAAC2C,UADrB;AAEE,UAAA,KAAK,EAAE;AAAEC,YAAAA,eAAe,EAAE,SAAStC,KAAT,GAAiB;AAApC;AAFT;AAAA;AAAA;AAAA;AAAA,gBADD,GAKG,IAjBN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD;;GApIuBR,O;UACND,S,EACDZ,W;;;KAFOa,O;AAsIxBA,OAAO,CAAC+C,SAAR,GAAoB;AAClBpB,EAAAA,SAAS,EAAE1C,SAAS,CAAC+D,IADH;AAElBP,EAAAA,kBAAkB,EAAExD,SAAS,CAACgE,IAFZ;AAGlBC,EAAAA,OAAO,EAAEjE,SAAS,CAACkE,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,OAAnB,EAA4B,QAA5B,EAAsC,KAAtC,CAAhB,CAHS;AAIlBxD,EAAAA,IAAI,EAAEV,SAAS,CAACmE,MAJE;AAKlB5C,EAAAA,KAAK,EAAEvB,SAAS,CAACmE,MALC;AAMlB3C,EAAAA,QAAQ,EAAExB,SAAS,CAACmE,MANF;AAOlB1C,EAAAA,MAAM,EAAEzB,SAAS,CAACoE,OAAV,CAAkBpE,SAAS,CAACqE,MAA5B,CAPU;AAQlBjB,EAAAA,IAAI,EAAEpD,SAAS,CAAC+D;AARE,CAApB","sourcesContent":["/*eslint-disable*/\r\nimport React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { NavLink, useLocation } from \"react-router-dom\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport Hidden from \"@material-ui/core/Hidden\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport logo from 'assets/img/srlogo.gif';\r\n// core components\r\nimport AdminNavbarLinks from \"components/Navbars/AdminNavbarLinks.js\";\r\nimport RTLNavbarLinks from \"components/Navbars/RTLNavbarLinks.js\";\r\n\r\nimport styles from \"assets/jss/material-dashboard-react/components/sidebarStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\nexport default function Sidebar(props) {\r\n  const classes = useStyles();\r\n  let location = useLocation();\r\n  // verifies if routeName is the one active (in browser input)\r\n  function activeRoute(routeName) {\r\n    return location.pathname === routeName;\r\n  }\r\n  \r\n  const { color, image, logoText, routes } = props;\r\n  var links = (\r\n    <List className={classes.list}>\r\n      {routes.map((prop, key) => {\r\n        var activePro = \" \";\r\n        var listItemClasses;\r\n        if (prop.path === \"/upgrade-to-pro\") {\r\n          activePro = classes.activePro + \" \";\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: true,\r\n          });\r\n        } else {\r\n          listItemClasses = classNames({\r\n            [\" \" + classes[color]]: activeRoute(prop.layout + prop.path),\r\n          });\r\n        }\r\n        const whiteFontClasses = classNames({\r\n          [\" \" + classes.whiteFont]: activeRoute(prop.layout + prop.path),\r\n        });\r\n        return (\r\n          <NavLink\r\n            to={prop.layout + prop.path}\r\n            className={activePro + classes.item}\r\n            activeClassName=\"active\"\r\n            key={key}\r\n          >\r\n            <ListItem button className={classes.itemLink + listItemClasses}>\r\n              {typeof prop.icon === \"string\" ? (\r\n                <Icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive,\r\n                  })}\r\n                >\r\n                  {prop.icon}\r\n                </Icon>\r\n              ) : (\r\n                <prop.icon\r\n                  className={classNames(classes.itemIcon, whiteFontClasses, {\r\n                    [classes.itemIconRTL]: props.rtlActive,\r\n                  })}\r\n                />\r\n              )}\r\n              <ListItemText\r\n                primary={props.rtlActive ? prop.rtlName : prop.name}\r\n                className={classNames(classes.itemText, whiteFontClasses, {\r\n                  [classes.itemTextRTL]: props.rtlActive,\r\n                })}\r\n                disableTypography={true}\r\n              />\r\n            </ListItem>\r\n          </NavLink>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n  var brand = (\r\n    <div className={classes.logo}>\r\n      <a\r\n        src={logo}\r\n        className={classNames(classes.logoLink, {\r\n          [classes.logoLinkRTL]: props.rtlActive,\r\n        })}\r\n        target=\"_blank\"\r\n      >\r\n        <div className={classes.logoImage}>\r\n          <img src={logo} alt=\"logo\" className={classes.img} />\r\n        </div>\r\n        Storage Rents\r\n      </a>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      <Hidden mdUp implementation=\"css\">\r\n        <Drawer\r\n          variant=\"temporary\"\r\n          anchor={props.rtlActive ? \"left\" : \"right\"}\r\n          open={props.open}\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive,\r\n            }),\r\n          }}\r\n          onClose={props.handleDrawerToggle}\r\n          ModalProps={{\r\n            keepMounted: true, // Better open performance on mobile.\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>\r\n            {props.rtlActive ? <RTLNavbarLinks /> : <AdminNavbarLinks />}\r\n            {links}\r\n          </div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden smDown implementation=\"css\">\r\n        <Drawer\r\n          anchor={props.rtlActive ? \"right\" : \"left\"}\r\n          variant=\"permanent\"\r\n          open\r\n          classes={{\r\n            paper: classNames(classes.drawerPaper, {\r\n              [classes.drawerPaperRTL]: props.rtlActive,\r\n            }),\r\n          }}\r\n        >\r\n          {brand}\r\n          <div className={classes.sidebarWrapper}>{links}</div>\r\n          {image !== undefined ? (\r\n            <div\r\n              className={classes.background}\r\n              style={{ backgroundImage: \"url(\" + image + \")\" }}\r\n            />\r\n          ) : null}\r\n        </Drawer>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {\r\n  rtlActive: PropTypes.bool,\r\n  handleDrawerToggle: PropTypes.func,\r\n  bgColor: PropTypes.oneOf([\"purple\", \"blue\", \"green\", \"orange\", \"red\"]),\r\n  logo: PropTypes.string,\r\n  image: PropTypes.string,\r\n  logoText: PropTypes.string,\r\n  routes: PropTypes.arrayOf(PropTypes.object),\r\n  open: PropTypes.bool,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}