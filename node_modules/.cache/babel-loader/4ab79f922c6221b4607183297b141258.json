{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nbins\\\\Documents\\\\GitHub\\\\SRSRSR\\\\Template\\\\src\\\\views\\\\Icons\\\\LocationRoute.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\nbins\\\\Documents\\\\GitHub\\\\SRSRSR\\\\Template\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { Fragment, useState, useEffect } from \"react\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; //import InputLabel from \"@material-ui/core/InputLabel\";\n// core components\n\nimport GridItem from \"components/Grid/GridItem.js\";\nimport Table from \"components/Table/Table.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\"; //import CustomInput from \"components/CustomInput/CustomInput.js\";\n\nimport Button from \"components/CustomButtons/Button.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\"; //import CardAvatar from \"components/Card/CardAvatar.js\";\n\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardFooter from \"components/Card/CardFooter.js\";\nimport axios from \"axios\"; //import axios from \"axios\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar LocationRoute = function LocationRoute() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      dataArray = _useState2[0],\n      setDataArray = _useState2[1];\n\n  useEffect(function () {\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var result, dataArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(\"http://localhost:5000/locations\", {\n                method: \"GET\"\n              });\n\n            case 2:\n              result = _context.sent;\n              console.log([result.data]) + console.log(\"data here\");\n              dataArray = result.data;\n              console.log(dataArray);\n              setDataArray(dataArray);\n              console.log(setDataArray);\n              return _context.abrupt(\"return\", setDataArray);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  });\n  /*\r\n      buildTable(data)\r\n  \r\n  \r\n      useEffect(() => {\r\n          (async () => {\r\n              const result = await axios.get(`http://localhost:5000/locations`, {\r\n                  method: \"GET\"\r\n              });\r\n            \r\n            console.log(result.data) + console.log(\"data here\")\r\n            \r\n            const dataArray = JSON.stringify(result)\r\n            console.log(dataArray)\r\n            setData(result);\r\n            console.log(setData)\r\n  */\n\n  /*    function buildTable(){\r\n           \r\n     \r\n            if(document.getElementById('myTable') != null){\r\n  \r\n          for (var i = 0; i < data.length; i++){\r\n              var row = `<tr>\r\n                              <td>${dataArray[i].zipcode}</td>\r\n                              <td>${dataArray[i].storage_type}</td>\r\n                              <td>${dataArray[i].location_address}</td>\r\n                              <td>${dataArray[i].size}</td>\r\n                             \r\n                        </tr>`\r\n                       \r\n                        if(document.getElementById(\"zipcode\") != null){\r\n                          table.innerHTML += row;\r\n                      }\r\n              table.innerHTML += row\r\n  \r\n              return (\r\n                  <td>{dataArray.zipcode}</td>\r\n           \r\n                  );\r\n              }\r\n              \r\n                \r\n             \r\n          }\r\n      }\r\n  const App = () => {\r\n  return <div className=\"app-container\">\r\n      <table>\r\n          <thead>\r\n              <tr>\r\n                  <th>Zipcode</th>\r\n                  <th>Storage Type</th>\r\n                  <th>Location Address</th>\r\n                  <th>Size</th>\r\n              </tr>\r\n            </thead>\r\n          <tbody>\r\n              <tr>\r\n                  <td>test1</td>\r\n                  <td>test2</td>\r\n                  <td>test3</td>\r\n                  <td>test4</td>\r\n              </tr>\r\n          </tbody>\r\n      </table>\r\n    </div>\r\n  }\r\n  */\n\n  var styles = {\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    }\n  };\n  var useStyles = makeStyles(styles);\n  var classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Storage Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Location Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Size\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataArray.map(function (dataArray) {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: setDataArray.zipcode\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: setDataArray.storage_type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: setDataArray.location_address\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: setDataArray.Size\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, _this)\n            }, dataArray.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 49\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filter Available Storage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(GridContainer, {\n          children: [/*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"zipcode-input\",\n              placeholder: \"Zipcode\",\n              type: \"text\",\n              name: \"zipcode\" //value={zipcode}\n              //onChange={e => onChange(e)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"storage-space-input\",\n              placeholder: \"Storage Space\",\n              type: \"text\",\n              name: \"storage_type\" //value={storage_type}\n              //onChange={e => onChange(e)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(GridItem, {\n            xs: 12,\n            sm: 12,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"address-input\",\n              placeholder: \"Address\",\n              type: \"text\",\n              name: \"location_address\" //value={location_address}\n              //onChange={e => onChange(e)}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(CardFooter, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        color: \"primary\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: classes.cardTitleWhite,\n          children: \"Current Available Locations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          id: \"myTable\",\n          tableHeaderColor: \"primary\",\n          tableHead: [\" Storage Type \", \" Size (sqft) \", \" Location Address \", \" Zipcode \"],\n          tableData: [\n            /*[data.storage_type, data.size, data.location_address, data.zipcode],\r\n            [data.storage_type, data.size, data.location_address, data.zipcode],\r\n            [data.storage_type, data.size, data.location_address, data.zipcode],\r\n            [data.storage_type, data.size, data.location_address, data.zipcode],\r\n            [data.storage_type, data.size, data.location_address, data.zipcode],*/\n          ]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(LocationRoute, \"ouQwpbBJ2+c36ZhukLt5ytwBoxw=\", true);\n\n_c = LocationRoute;\nexport default LocationRoute;\n/*\r\n       const [info4, setInfo4] = useState([]);\r\n\n       async function getInfo4() {\r\n           const res = await fetch(`http://localhost:5000/locations/4`, {\r\n               method: \"GET\"\r\n           });\r\n           const info4Array = await res.json();\r\n           setInfo4(info4Array);\r\n    \r\n      const info3Array = await res.json();\r\n       setInfo3(info3Array);\r\n       \r\n      // console.log(info3Array)\r\n   \r\n\n   const onSubmitForm = async e => {\r\n       e.preventDefault();\r\n       try {\r\n           const body = { username, first_name, last_name, city, country, info, addy, email, postal_code };\r\n           const response = await fetch(\"http://localhost:5000/prof/3\", {\r\n               method: \"GET\",\r\n               headers: { \"Content-Type\": \"application/json\" },\r\n               body: JSON.stringify(body)\r\n           });\r\n           window.location = \"/admin/user\"\r\n           console.log(response);\r\n           console.log(\"please work.\")\r\n       } catch (err) {\r\n           console.error(err.message);\r\n       }\r\n   };\r\n\n   const response = \r\n\n   useEffect(() => {\r\n       getInfo3();\r\n   }, []);\r\n\n   //location id 4\r\n   const [info4, setInfo4] = useState([]);\r\n\n   async function getInfo4() {\r\n       const res = await fetch(`http://localhost:5000/locations/4`, {\r\n           method: \"GET\"\r\n       });\r\n       const info4Array = await res.json();\r\n       setInfo4(info4Array);\r\n   }\r\n\n   useEffect(() => {\r\n       getInfo4();\r\n   }, []);\r\n\n   //location id 5\r\n   const [info5, setInfo5] = useState([]);\r\n\n   async function getInfo5() {\r\n       const res = await fetch(`http://localhost:5000/locations/5`, {\r\n           method: \"GET\"\r\n       });\r\n       const info5Array = await res.json();\r\n       setInfo5(info5Array);\r\n   }\r\n\n   useEffect(() => {\r\n       getInfo5();\r\n   }, []);\r\n\n   //location id 6\r\n   const [info6, setInfo6] = useState([]);\r\n\n   async function getInfo6() {\r\n       const res = await fetch(`http://localhost:5000/locations/6`, {\r\n           method: \"GET\"\r\n       });\r\n       const info6Array = await res.json();\r\n       setInfo6(info6Array);\r\n   }\r\n\n   useEffect(() => {\r\n       getInfo6();\r\n   }, []);\r\n\n   //location id 7\r\n   const [info7, setInfo7] = useState([]);\r\n\n   async function getInfo7() {\r\n       const res = await fetch(`http://localhost:5000/locations/7`, {\r\n           method: \"GET\"\r\n       });\r\n       const info7Array = await res.json();\r\n       setInfo7(info7Array);\r\n   }\r\n\n   useEffect(() => {\r\n       getInfo7();\r\n   }, []);\r\n   */\n\n/*\r\n                        <GridItem xs={12} sm={12} md={4}>\r\n                            <input\r\n                                className=\"use-time-input\"\r\n                                placeholder=\"Use Time\"\r\n                                type=\"text\"\r\n                                name=\"time_need\"\r\n                                //value={time_need}\r\n                                //onChange={e => onChange(e)}\r\n                            />\r\n                        </GridItem>\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationRoute\");","map":{"version":3,"sources":["C:/Users/nbins/Documents/GitHub/SRSRSR/Template/src/views/Icons/LocationRoute.js"],"names":["React","Fragment","useState","useEffect","makeStyles","GridItem","Table","GridContainer","Button","Card","CardHeader","CardBody","CardFooter","axios","LocationRoute","dataArray","setDataArray","get","method","result","console","log","data","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","classes","map","zipcode","storage_type","location_address","Size","key"],"mappings":"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":["import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Table from \"components/Table/Table.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\n//import CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n//import CardAvatar from \"components/Card/CardAvatar.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport axios from \"axios\";\r\n\r\n//import axios from \"axios\";\r\n\r\n\r\n\r\n\r\n\r\nconst LocationRoute = () => {\r\n\r\n   \r\n    const [dataArray, setDataArray] = useState([]);\r\n\r\n    useEffect(() => {\r\n      (async () => {\r\n            const result = await axios.get(`http://localhost:5000/locations`, {\r\n                method: \"GET\"\r\n            });\r\n          \r\n          console.log([result.data]) + console.log(\"data here\")\r\n          \r\n          const dataArray =(result.data);\r\n          console.log(dataArray)  \r\n          setDataArray(dataArray)\r\n          console.log(setDataArray)  \r\n          return(setDataArray)\r\n          \r\n \r\n        })();\r\n\r\n       \r\n    } );\r\n\r\n\r\n    \r\n   \r\n     \r\n/*\r\n    buildTable(data)\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const result = await axios.get(`http://localhost:5000/locations`, {\r\n                method: \"GET\"\r\n            });\r\n          \r\n          console.log(result.data) + console.log(\"data here\")\r\n          \r\n          const dataArray = JSON.stringify(result)\r\n          console.log(dataArray)\r\n          setData(result);\r\n          console.log(setData)\r\n*/\r\n          \r\n\r\n          \r\n         \r\n       \r\n\r\n    /*    function buildTable(){\r\n\r\n           \r\n\r\n\r\n   \r\n\r\n            if(document.getElementById('myTable') != null){\r\n    \r\n            for (var i = 0; i < data.length; i++){\r\n                var row = `<tr>\r\n                                <td>${dataArray[i].zipcode}</td>\r\n                                <td>${dataArray[i].storage_type}</td>\r\n                                <td>${dataArray[i].location_address}</td>\r\n                                <td>${dataArray[i].size}</td>\r\n                               \r\n                          </tr>`\r\n                         \r\n                          if(document.getElementById(\"zipcode\") != null){\r\n                            table.innerHTML += row;\r\n                        }\r\n                table.innerHTML += row\r\n    \r\n                return (\r\n                    <td>{dataArray.zipcode}</td>\r\n             \r\n                    );\r\n                }\r\n                \r\n                  \r\n               \r\n            }\r\n        }\r\nconst App = () => {\r\n    return <div className=\"app-container\">\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Zipcode</th>\r\n                    <th>Storage Type</th>\r\n                    <th>Location Address</th>\r\n                    <th>Size</th>\r\n                </tr>\r\n\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>test1</td>\r\n                    <td>test2</td>\r\n                    <td>test3</td>\r\n                    <td>test4</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n*/\r\n\r\nconst styles = {\r\n    cardCategoryWhite: {\r\n        color: \"rgba(255,255,255,.62)\",\r\n        margin: \"0\",\r\n        fontSize: \"14px\",\r\n        marginTop: \"0\",\r\n        marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n    },\r\n};\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst classes = useStyles();\r\n\r\n   \r\n    return (\r\n        \r\n        <Fragment>\r\n             \r\n        <div className=\"app-container\">\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Storage Type</th>\r\n                    <th>Location Address</th>\r\n                    <th>Size</th>\r\n                </tr>\r\n\r\n            </thead>\r\n            <tbody>\r\n                {dataArray.map((dataArray)=> (  <li key={dataArray.key} >\r\n                <tr>\r\n                    <td>{setDataArray.zipcode}</td>\r\n                    <td>{setDataArray.storage_type}</td>\r\n                    <td>{setDataArray.location_address}</td>\r\n                    <td>{setDataArray.Size}</td>\r\n                    \r\n                </tr>\r\n                </li>\r\n                ))}\r\n               \r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n        \r\n            <Card>\r\n                <CardHeader color=\"primary\">\r\n                    <h4>Filter Available Storage</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={4}>\r\n                            <input\r\n                                className=\"zipcode-input\"\r\n                                placeholder=\"Zipcode\"\r\n                                type=\"text\"\r\n                                name=\"zipcode\"\r\n                                //value={zipcode}\r\n                                //onChange={e => onChange(e)}\r\n                            />\r\n                        </GridItem>\r\n                        <GridItem xs={12} sm={12} md={4}>\r\n                            <input\r\n                                className=\"storage-space-input\"\r\n                                placeholder=\"Storage Space\"\r\n                                type=\"text\"\r\n                                name=\"storage_type\"\r\n                                //value={storage_type}\r\n                                //onChange={e => onChange(e)}\r\n                            />\r\n                        </GridItem>\r\n                        <GridItem xs={12} sm={12} md={4}>\r\n                            <input\r\n                                className=\"address-input\"\r\n                                placeholder=\"Address\"\r\n                                type=\"text\"\r\n                                name=\"location_address\"\r\n                                //value={location_address}\r\n                                //onChange={e => onChange(e)}\r\n                            />\r\n                        </GridItem>\r\n                    </GridContainer>\r\n                </CardBody>\r\n                <CardFooter>\r\n\r\n                    <Button color=\"primary\"\r\n                    \r\n                    >Search</Button>\r\n                </CardFooter>\r\n            </Card>\r\n            <br></br>\r\n            <Card>\r\n                <CardHeader color=\"primary\">\r\n                    <h4 className={classes.cardTitleWhite}>Current Available Locations</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    \r\n                        <Table id=\"myTable\"\r\n                            tableHeaderColor=\"primary\"\r\n                            tableHead={[ \" Storage Type \", \" Size (sqft) \", \" Location Address \", \" Zipcode \"]}\r\n                            tableData={[\r\n                                /*[data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],*/\r\n                            ]}\r\n                        />\r\n                    \r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>\r\n\r\n        \r\n    )\r\n\r\n    \r\n\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n    \r\n       \r\n\r\n    export default LocationRoute;\r\n\r\n /*\r\n        const [info4, setInfo4] = useState([]);\r\n\r\n        async function getInfo4() {\r\n            const res = await fetch(`http://localhost:5000/locations/4`, {\r\n                method: \"GET\"\r\n            });\r\n            const info4Array = await res.json();\r\n            setInfo4(info4Array);\r\n     \r\n       const info3Array = await res.json();\r\n        setInfo3(info3Array);\r\n        \r\n       // console.log(info3Array)\r\n    \r\n\r\n    const onSubmitForm = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { username, first_name, last_name, city, country, info, addy, email, postal_code };\r\n            const response = await fetch(\"http://localhost:5000/prof/3\", {\r\n                method: \"GET\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n            window.location = \"/admin/user\"\r\n            console.log(response);\r\n            console.log(\"please work.\")\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const response = \r\n\r\n    useEffect(() => {\r\n        getInfo3();\r\n    }, []);\r\n\r\n    //location id 4\r\n    const [info4, setInfo4] = useState([]);\r\n\r\n    async function getInfo4() {\r\n        const res = await fetch(`http://localhost:5000/locations/4`, {\r\n            method: \"GET\"\r\n        });\r\n        const info4Array = await res.json();\r\n        setInfo4(info4Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo4();\r\n    }, []);\r\n\r\n    //location id 5\r\n    const [info5, setInfo5] = useState([]);\r\n\r\n    async function getInfo5() {\r\n        const res = await fetch(`http://localhost:5000/locations/5`, {\r\n            method: \"GET\"\r\n        });\r\n        const info5Array = await res.json();\r\n        setInfo5(info5Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo5();\r\n    }, []);\r\n\r\n    //location id 6\r\n    const [info6, setInfo6] = useState([]);\r\n\r\n    async function getInfo6() {\r\n        const res = await fetch(`http://localhost:5000/locations/6`, {\r\n            method: \"GET\"\r\n        });\r\n        const info6Array = await res.json();\r\n        setInfo6(info6Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo6();\r\n    }, []);\r\n\r\n    //location id 7\r\n    const [info7, setInfo7] = useState([]);\r\n\r\n    async function getInfo7() {\r\n        const res = await fetch(`http://localhost:5000/locations/7`, {\r\n            method: \"GET\"\r\n        });\r\n        const info7Array = await res.json();\r\n        setInfo7(info7Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo7();\r\n    }, []);\r\n    */\r\n\r\n    \r\n\r\n\r\n/*\r\n                        <GridItem xs={12} sm={12} md={4}>\r\n                            <input\r\n                                className=\"use-time-input\"\r\n                                placeholder=\"Use Time\"\r\n                                type=\"text\"\r\n                                name=\"time_need\"\r\n                                //value={time_need}\r\n                                //onChange={e => onChange(e)}\r\n                            />\r\n                        </GridItem>\r\n*/"]},"metadata":{},"sourceType":"module"}