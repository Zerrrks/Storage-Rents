{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\nbins\\\\Documents\\\\GitHub\\\\SRSRSR\\\\Template\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{Fragment,useState,useEffect}from\"react\";import Table from\"components/Table/Table.js\";import GridItem from\"components/Grid/GridItem\";import GridContainer from\"components/Grid/GridContainer\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";//import InputLabel from \"@material-ui/core/InputLabel\";\n// core components\n//import GridItem from \"components/Grid/GridItem.js\";\n//import GridContainer from \"components/Grid/GridContainer.js\";\n//import CustomInput from \"components/CustomInput/CustomInput.js\";\n//import Button from \"components/CustomButtons/Button.js\";\nimport Card from\"components/Card/Card.js\";import CardHeader from\"components/Card/CardHeader.js\";//import CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from\"components/Card/CardBody.js\";//import CardFooter from \"components/Card/CardFooter.js\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ProfileInfo=function ProfileInfo(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),info=_useState2[0],setInfo=_useState2[1];function getInfo(){return _getInfo.apply(this,arguments);}function _getInfo(){_getInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,infoArray;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"/prof/3\");case 2:res=_context.sent;_context.next=5;return res.json();case 5:infoArray=_context.sent;setInfo(infoArray);case 7:case\"end\":return _context.stop();}}},_callee);}));return _getInfo.apply(this,arguments);}useEffect(function(){getInfo();},[]);var styles={cardCategoryWhite:{color:\"rgba(255,255,255,.62)\",margin:\"0\",fontSize:\"14px\",marginTop:\"0\",marginBottom:\"0\"},cardTitleWhite:{color:\"#FFFFFF\",marginTop:\"0px\",minHeight:\"auto\",fontWeight:\"300\",fontFamily:\"'Roboto', 'Helvetica', 'Arial', sans-serif\",marginBottom:\"3px\",textDecoration:\"none\"}};var useStyles=makeStyles(styles);var classes=useStyles();return/*#__PURE__*/_jsxs(Fragment,{children:[\" \",/*#__PURE__*/_jsx(GridItem,{xs:20,sm:20,md:15,children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(CardHeader,{color:\"primary\",children:[/*#__PURE__*/_jsx(\"h4\",{className:classes.cardTitleWhite,children:\"Profile\"}),/*#__PURE__*/_jsx(\"p\",{className:classes.cardCategoryWhite,children:\"Current profile information\"})]}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(GridContainer,{children:/*#__PURE__*/_jsx(Table//key={info.prof_id}\n,{tableHeaderColor:\"primary\",tableHead:[\"Your information: \"],tableData:[[\"Username - \",info.username],[\"Email - \",info.email],[\"First Name - \",info.first_name],[\"Last Name - \",info.last_name],[\"Street Address - \",info.addy],[\"Postal Code - \",info.postal_code],[\"City - \",info.city],[\"State - \",info.country],[\"Info - \",info.info]]})})})]})})]});};export default ProfileInfo;/*\r\n<table className=\"table mt-5\">\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Email Address</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Street Address</th>\r\n            <th>Postal Code</th>\r\n            <th>City</th>\r\n            <th>Country</th>\r\n            <th>Info</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr key={info.prof_id}>\r\n              <td>{info.username}</td>\r\n              <td>{info.first_name}</td>\r\n              <td>{info.last_name}</td>\r\n              <td>{info.addy}</td>\r\n              <td>{info.postal_code}</td>\r\n              <td>{info.city}</td>\r\n              <td>{info.country}</td>\r\n              <td>{info.info}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n*/","map":{"version":3,"sources":["C:/Users/nbins/Documents/GitHub/SRSRSR/Template/src/views/UserProfile/ProfileInfo.js"],"names":["React","Fragment","useState","useEffect","Table","GridItem","GridContainer","makeStyles","Card","CardHeader","CardBody","ProfileInfo","info","setInfo","getInfo","fetch","res","json","infoArray","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","classes","username","email","first_name","last_name","addy","postal_code","city","country"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport Table from \"components/Table/Table.js\";\r\nimport GridItem from \"components/Grid/GridItem\";\r\nimport GridContainer from \"components/Grid/GridContainer\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\n//import GridItem from \"components/Grid/GridItem.js\";\r\n//import GridContainer from \"components/Grid/GridContainer.js\";\r\n//import CustomInput from \"components/CustomInput/CustomInput.js\";\r\n//import Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n//import CardAvatar from \"components/Card/CardAvatar.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\n//import CardFooter from \"components/Card/CardFooter.js\";\r\n\r\nconst ProfileInfo = () => {\r\n    const [info, setInfo] = useState([]);\r\n\r\n    async function getInfo() {\r\n        const res = await fetch(\"/prof/3\"); //`/prof/${id}`\r\n        const infoArray = await res.json();\r\n        setInfo(infoArray);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo();\r\n    }, []);\r\n\r\n    const styles = {\r\n        cardCategoryWhite: {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\",\r\n        },\r\n        cardTitleWhite: {\r\n            color: \"#FFFFFF\",\r\n            marginTop: \"0px\",\r\n            minHeight: \"auto\",\r\n            fontWeight: \"300\",\r\n            fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n            marginBottom: \"3px\",\r\n            textDecoration: \"none\",\r\n        },\r\n    };\r\n    const useStyles = makeStyles(styles);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            {\" \"}\r\n            <GridItem xs={20} sm={20} md={15}>\r\n                <Card>\r\n                    <CardHeader color=\"primary\">\r\n                        <h4 className={classes.cardTitleWhite}>Profile</h4>\r\n                        <p className={classes.cardCategoryWhite}>Current profile information</p>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <GridContainer>\r\n                            <Table\r\n                                //key={info.prof_id}\r\n                                tableHeaderColor=\"primary\"\r\n                                tableHead={[\"Your information: \"]}\r\n                                tableData={[\r\n                                    [\"Username - \", info.username],\r\n                                    [\"Email - \", info.email],\r\n                                    [\"First Name - \", info.first_name], \r\n                                    [\"Last Name - \", info.last_name], \r\n                                    [\"Street Address - \", info.addy],\r\n                                    [\"Postal Code - \", info.postal_code], \r\n                                    [\"City - \", info.city],\r\n                                    [\"State - \", info.country],\r\n                                    [\"Info - \", info.info]\r\n                                ]}\r\n                            />\r\n                        </GridContainer>\r\n                    </CardBody>\r\n                </Card>\r\n            </GridItem>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n\r\n/*\r\n<table className=\"table mt-5\">\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Email Address</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Street Address</th>\r\n            <th>Postal Code</th>\r\n            <th>City</th>\r\n            <th>Country</th>\r\n            <th>Info</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr key={info.prof_id}>\r\n              <td>{info.username}</td>\r\n              <td>{info.first_name}</td>\r\n              <td>{info.last_name}</td>\r\n              <td>{info.addy}</td>\r\n              <td>{info.postal_code}</td>\r\n              <td>{info.city}</td>\r\n              <td>{info.country}</td>\r\n              <td>{info.info}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n*/"]},"metadata":{},"sourceType":"module"}