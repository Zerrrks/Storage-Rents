{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nbins\\\\Documents\\\\GitHub\\\\SRSRSR\\\\Template\\\\src\\\\views\\\\UserStorage\\\\DisplayStorage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\nbins\\\\Documents\\\\GitHub\\\\SRSRSR\\\\Template\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport Table from \"components/Table/Table.js\";\nimport GridItem from \"components/Grid/GridItem\";\nimport GridContainer from \"components/Grid/GridContainer\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; //import InputLabel from \"@material-ui/core/InputLabel\";\n// core components\n//import GridItem from \"components/Grid/GridItem.js\";\n//import GridContainer from \"components/Grid/GridContainer.js\";\n//import CustomInput from \"components/CustomInput/CustomInput.js\";\n//import Button from \"components/CustomButtons/Button.js\";\n\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\"; //import CardAvatar from \"components/Card/CardAvatar.js\";\n\nimport CardBody from \"components/Card/CardBody.js\";\nimport FindStorage from \"hooks/FindStorage\";\nimport { InputLabel } from \"@material-ui/core\"; //import { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n//import CardFooter from \"components/Card/CardFooter.js\";\n//const cors = require(\"cors\");\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar DisplayStorage = function DisplayStorage() {\n  _s();\n\n  // useEffect(async () => {\n  //    try {\n  //         const response = await storageFinder.get(\"/\")\n  //        console.log(response);\n  //     }   catch (err) {}\n  //  }, [])\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1]; //  let history = useHistory\n\n\n  function getInfo() {\n    return _getInfo.apply(this, arguments);\n  }\n\n  function _getInfo() {\n    _getInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var res, infoArray;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch('/storage/16', {\n                //`/storage/${id}`\n                method: \"GET\"\n              });\n\n            case 2:\n              res = _context2.sent;\n              _context2.next = 5;\n              return res.json();\n\n            case 5:\n              infoArray = _context2.sent;\n              setInfo(infoArray);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _getInfo.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    getInfo();\n  }, []); //  const handleUpdate = (storage_id) => {\n  //      history.push(`/storage/${storage_id}/`);\n  //  };\n\n  var styles = {\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    }\n  };\n  var useStyles = makeStyles(styles);\n  var classes = useStyles();\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(storage_id) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return FindStorage[\"delete\"](\"/\".concat(storage_id));\n\n            case 3:\n              response = _context.sent;\n              console.log(response);\n              setInfo({});\n              _context.next = 10;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function handleDelete(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 20,\n      sm: 20,\n      md: 15,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: classes.cardTitleWhite,\n            children: \"Your listed storage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.cardCategoryWhite,\n            children: \"Current storage infomation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: [/*#__PURE__*/_jsxDEV(GridContainer, {\n            children: [/*#__PURE__*/_jsxDEV(Table //key={info.storage_id}\n            , {\n              tableHeaderColor: \"primary\",\n              tableData: [[\"Location Description: \", info.location_name], [\"Location Price: \", info.location_price], [\"Square Footage: \", info.square_footage], [\"Full Name: \", info.full_name], [\"Street Address: \", info.street_name], [\"Postal Code: \", info.postal_c], [\"City: \", info.city_storage], [\"State: \", info.country_storage]]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(InputLabel, {\n              style: {\n                color: \"#AAAAAA\"\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 63\n              }, _this), \"Additional Details\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(Table, {\n              tableData: [[info.add_details]]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 21\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 41\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: function onClick() {\n              return handleDelete(info.storage_id);\n            },\n            children: \" Delete Storage \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DisplayStorage, \"HUiktqBuLjEgNgTkz3j9/0iQeoU=\", true);\n\n_c = DisplayStorage;\nexport default DisplayStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayStorage\");","map":{"version":3,"sources":["C:/Users/nbins/Documents/GitHub/SRSRSR/Template/src/views/UserStorage/DisplayStorage.js"],"names":["React","Fragment","useState","useEffect","Button","Table","GridItem","GridContainer","makeStyles","Card","CardHeader","CardBody","FindStorage","InputLabel","DisplayStorage","info","setInfo","getInfo","fetch","method","res","json","infoArray","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","classes","handleDelete","storage_id","response","console","log","location_name","location_price","square_footage","full_name","street_name","postal_c","city_storage","country_storage","add_details"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport  Button  from \"components/CustomButtons/Button.js\";  \r\nimport Table from \"components/Table/Table.js\";\r\nimport GridItem from \"components/Grid/GridItem\";\r\nimport GridContainer from \"components/Grid/GridContainer\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\n//import GridItem from \"components/Grid/GridItem.js\";\r\n//import GridContainer from \"components/Grid/GridContainer.js\";\r\n//import CustomInput from \"components/CustomInput/CustomInput.js\";\r\n//import Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n//import CardAvatar from \"components/Card/CardAvatar.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport FindStorage from \"hooks/FindStorage\";\r\nimport { InputLabel } from \"@material-ui/core\";\r\n//import { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\r\n//import CardFooter from \"components/Card/CardFooter.js\";\r\n//const cors = require(\"cors\");\r\n\r\nconst DisplayStorage = () => {\r\n   // useEffect(async () => {\r\n    //    try {\r\n   //         const response = await storageFinder.get(\"/\")\r\n    //        console.log(response);\r\n   //     }   catch (err) {}\r\n  //  }, [])\r\n    const [info, setInfo] = useState([]);\r\n  //  let history = useHistory\r\n    async function getInfo() {\r\n        const res = await fetch('/storage/16' , { //`/storage/${id}`\r\n            method: \"GET\"\r\n        });\r\n        const infoArray = await res.json();\r\n        setInfo(infoArray);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo();\r\n    }, []);\r\n  //  const handleUpdate = (storage_id) => {\r\n  //      history.push(`/storage/${storage_id}/`);\r\n  //  };\r\n    const styles = {\r\n        cardCategoryWhite: {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\",\r\n        },\r\n        cardTitleWhite: {\r\n            color: \"#FFFFFF\",\r\n            marginTop: \"0px\",\r\n            minHeight: \"auto\",\r\n            fontWeight: \"300\",\r\n            fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n            marginBottom: \"3px\",\r\n            textDecoration: \"none\",\r\n        },\r\n    };\r\n\r\n    const useStyles = makeStyles(styles);\r\n\r\n    const classes = useStyles();\r\n    \r\n    const handleDelete = async (storage_id) => {\r\n        try {\r\n          const response = await FindStorage.delete(`/${storage_id}`);\r\n          console.log(response);\r\n          setInfo({});\r\n        } catch (err){\r\n//\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            {\" \"}\r\n            <GridItem xs={20} sm={20} md={15}>\r\n                <Card>\r\n                    <CardHeader color=\"primary\">\r\n                        <h4 className={classes.cardTitleWhite}>Your listed storage</h4>\r\n                        <p className={classes.cardCategoryWhite}>Current storage infomation</p>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <GridContainer>\r\n                            <Table\r\n                                //key={info.storage_id}\r\n                                tableHeaderColor=\"primary\"\r\n                                tableData={[\r\n                                    [\"Location Description: \", info.location_name],\r\n                                    [\"Location Price: \", info.location_price],\r\n                                    [\"Square Footage: \", info.square_footage], \r\n                                    [\"Full Name: \", info.full_name], \r\n                                    [\"Street Address: \", info.street_name],\r\n                                    [\"Postal Code: \", info.postal_c,], \r\n                                    [\"City: \", info.city_storage],\r\n                                    [\"State: \", info.country_storage],\r\n                                ]}\r\n                            />\r\n                    <InputLabel style={{ color: \"#AAAAAA\" }}> <br></br>Additional Details</InputLabel>\r\n                    <Table tableData={[[info.add_details],]}/>\r\n                        </GridContainer><br></br>\r\n                        <Button color = \"primary\" onClick={() => handleDelete(info.storage_id)}> Delete Storage </Button>\r\n                    </CardBody>\r\n                </Card>\r\n            </GridItem>  \r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default DisplayStorage;"]},"metadata":{},"sourceType":"module"}