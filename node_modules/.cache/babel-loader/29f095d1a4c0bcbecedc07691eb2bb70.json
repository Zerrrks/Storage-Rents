{"ast":null,"code":"import _asyncToGenerator from\"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\nbins\\\\Documents\\\\GitHub\\\\SRSRSR\\\\Template\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import React,{Fragment,useState,useEffect}from\"react\";// @material-ui/core components\nimport{makeStyles}from\"@material-ui/core/styles\";//import InputLabel from \"@material-ui/core/InputLabel\";\n// core components\nimport GridItem from\"components/Grid/GridItem.js\";import Table from\"components/Table/Table.js\";import GridContainer from\"components/Grid/GridContainer.js\";//import CustomInput from \"components/CustomInput/CustomInput.js\";\nimport Button from\"components/CustomButtons/Button.js\";import Card from\"components/Card/Card.js\";import CardHeader from\"components/Card/CardHeader.js\";//import CardAvatar from \"components/Card/CardAvatar.js\";\nimport CardBody from\"components/Card/CardBody.js\";import CardFooter from\"components/Card/CardFooter.js\";import axios from\"axios\";//import axios from \"axios\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LocationRoute=function LocationRoute(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),dataArray=_useState2[0],setDataArray=_useState2[1];useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result,dataArray;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(\"http://localhost:5000/locations\",{method:\"GET\"});case 2:result=_context.sent;console.log([result.data])+console.log(\"data here\");dataArray=result.data;console.log(dataArray);setDataArray(dataArray);console.log(setDataArray);return _context.abrupt(\"return\",setDataArray);case 9:case\"end\":return _context.stop();}}},_callee);}))();});/*\r\n    buildTable(data)\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const result = await axios.get(`http://localhost:5000/locations`, {\r\n                method: \"GET\"\r\n            });\r\n          \r\n          console.log(result.data) + console.log(\"data here\")\r\n          \r\n          const dataArray = JSON.stringify(result)\r\n          console.log(dataArray)\r\n          setData(result);\r\n          console.log(setData)\r\n*/ /*    function buildTable(){\r\n\r\n           \r\n\r\n\r\n   \r\n\r\n            if(document.getElementById('myTable') != null){\r\n    \r\n            for (var i = 0; i < data.length; i++){\r\n                var row = `<tr>\r\n                                <td>${dataArray[i].zipcode}</td>\r\n                                <td>${dataArray[i].storage_type}</td>\r\n                                <td>${dataArray[i].location_address}</td>\r\n                                <td>${dataArray[i].size}</td>\r\n                               \r\n                          </tr>`\r\n                         \r\n                          if(document.getElementById(\"zipcode\") != null){\r\n                            table.innerHTML += row;\r\n                        }\r\n                table.innerHTML += row\r\n    \r\n                return (\r\n                    <td>{dataArray.zipcode}</td>\r\n             \r\n                    );\r\n                }\r\n                \r\n                  \r\n               \r\n            }\r\n        }\r\nconst App = () => {\r\n    return <div className=\"app-container\">\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Zipcode</th>\r\n                    <th>Storage Type</th>\r\n                    <th>Location Address</th>\r\n                    <th>Size</th>\r\n                </tr>\r\n\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>test1</td>\r\n                    <td>test2</td>\r\n                    <td>test3</td>\r\n                    <td>test4</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n*/var styles={cardCategoryWhite:{color:\"rgba(255,255,255,.62)\",margin:\"0\",fontSize:\"14px\",marginTop:\"0\",marginBottom:\"0\"},cardTitleWhite:{color:\"#FFFFFF\",marginTop:\"0px\",minHeight:\"auto\",fontWeight:\"300\",fontFamily:\"'Roboto', 'Helvetica', 'Arial', sans-serif\",marginBottom:\"3px\",textDecoration:\"none\"}};var useStyles=makeStyles(styles);var classes=useStyles();return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"app-container\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{}),/*#__PURE__*/_jsx(\"th\",{children:\"Storage Type\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Location Address\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Size\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:dataArray.map(function(dataArray){return/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:setDataArray.zipcode}),/*#__PURE__*/_jsx(\"td\",{children:setDataArray.storage_type}),/*#__PURE__*/_jsx(\"td\",{children:setDataArray.location_address}),/*#__PURE__*/_jsx(\"td\",{children:setDataArray.Size})]})},dataArray.key);})})]})}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{color:\"primary\",children:/*#__PURE__*/_jsx(\"h4\",{children:\"Filter Available Storage\"})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsxs(GridContainer,{children:[/*#__PURE__*/_jsx(GridItem,{xs:12,sm:12,md:4,children:/*#__PURE__*/_jsx(\"input\",{className:\"zipcode-input\",placeholder:\"Zipcode\",type:\"text\",name:\"zipcode\"//value={zipcode}\n//onChange={e => onChange(e)}\n})}),/*#__PURE__*/_jsx(GridItem,{xs:12,sm:12,md:4,children:/*#__PURE__*/_jsx(\"input\",{className:\"storage-space-input\",placeholder:\"Storage Space\",type:\"text\",name:\"storage_type\"//value={storage_type}\n//onChange={e => onChange(e)}\n})}),/*#__PURE__*/_jsx(GridItem,{xs:12,sm:12,md:4,children:/*#__PURE__*/_jsx(\"input\",{className:\"address-input\",placeholder:\"Address\",type:\"text\",name:\"location_address\"//value={location_address}\n//onChange={e => onChange(e)}\n})})]})}),/*#__PURE__*/_jsx(CardFooter,{children:/*#__PURE__*/_jsx(Button,{color:\"primary\",children:\"Search\"})})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{color:\"primary\",children:/*#__PURE__*/_jsx(\"h4\",{className:classes.cardTitleWhite,children:\"Current Available Locations\"})}),/*#__PURE__*/_jsx(CardBody,{children:/*#__PURE__*/_jsx(Table,{id:\"myTable\",tableHeaderColor:\"primary\",tableHead:[\" Storage Type \",\" Size (sqft) \",\" Location Address \",\" Zipcode \"],tableData:[/*[data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],*/]})})]})]});};export default LocationRoute;/*\r\n        const [info4, setInfo4] = useState([]);\r\n\r\n        async function getInfo4() {\r\n            const res = await fetch(`http://localhost:5000/locations/4`, {\r\n                method: \"GET\"\r\n            });\r\n            const info4Array = await res.json();\r\n            setInfo4(info4Array);\r\n     \r\n       const info3Array = await res.json();\r\n        setInfo3(info3Array);\r\n        \r\n       // console.log(info3Array)\r\n    \r\n\r\n    const onSubmitForm = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { username, first_name, last_name, city, country, info, addy, email, postal_code };\r\n            const response = await fetch(\"http://localhost:5000/prof/3\", {\r\n                method: \"GET\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n            window.location = \"/admin/user\"\r\n            console.log(response);\r\n            console.log(\"please work.\")\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const response = \r\n\r\n    useEffect(() => {\r\n        getInfo3();\r\n    }, []);\r\n\r\n    //location id 4\r\n    const [info4, setInfo4] = useState([]);\r\n\r\n    async function getInfo4() {\r\n        const res = await fetch(`http://localhost:5000/locations/4`, {\r\n            method: \"GET\"\r\n        });\r\n        const info4Array = await res.json();\r\n        setInfo4(info4Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo4();\r\n    }, []);\r\n\r\n    //location id 5\r\n    const [info5, setInfo5] = useState([]);\r\n\r\n    async function getInfo5() {\r\n        const res = await fetch(`http://localhost:5000/locations/5`, {\r\n            method: \"GET\"\r\n        });\r\n        const info5Array = await res.json();\r\n        setInfo5(info5Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo5();\r\n    }, []);\r\n\r\n    //location id 6\r\n    const [info6, setInfo6] = useState([]);\r\n\r\n    async function getInfo6() {\r\n        const res = await fetch(`http://localhost:5000/locations/6`, {\r\n            method: \"GET\"\r\n        });\r\n        const info6Array = await res.json();\r\n        setInfo6(info6Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo6();\r\n    }, []);\r\n\r\n    //location id 7\r\n    const [info7, setInfo7] = useState([]);\r\n\r\n    async function getInfo7() {\r\n        const res = await fetch(`http://localhost:5000/locations/7`, {\r\n            method: \"GET\"\r\n        });\r\n        const info7Array = await res.json();\r\n        setInfo7(info7Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo7();\r\n    }, []);\r\n    */ /*\r\n                        <GridItem xs={12} sm={12} md={4}>\r\n                            <input\r\n                                className=\"use-time-input\"\r\n                                placeholder=\"Use Time\"\r\n                                type=\"text\"\r\n                                name=\"time_need\"\r\n                                //value={time_need}\r\n                                //onChange={e => onChange(e)}\r\n                            />\r\n                        </GridItem>\r\n*/","map":{"version":3,"sources":["C:/Users/nbins/Documents/GitHub/SRSRSR/Template/src/views/Icons/LocationRoute.js"],"names":["React","Fragment","useState","useEffect","makeStyles","GridItem","Table","GridContainer","Button","Card","CardHeader","CardBody","CardFooter","axios","LocationRoute","dataArray","setDataArray","get","method","result","console","log","data","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","classes","map","zipcode","storage_type","location_address","Size","key"],"mappings":"6ZAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CAEA;AACA,OAASC,UAAT,KAA2B,0BAA3B,CACA;AACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,2BAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kCAA1B,CACA;AACA,MAAOC,CAAAA,MAAP,KAAmB,oCAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,yBAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,+BAAvB,CACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,6BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,+BAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA;wFAMA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAGxB,cAAkCZ,QAAQ,CAAC,EAAD,CAA1C,wCAAOa,SAAP,eAAkBC,YAAlB,eAEAb,SAAS,CAAC,UAAM,CACd,wDAAC,8KAC0BU,CAAAA,KAAK,CAACI,GAAN,mCAA6C,CAC9DC,MAAM,CAAE,KADsD,CAA7C,CAD1B,QACWC,MADX,eAKGC,OAAO,CAACC,GAAR,CAAY,CAACF,MAAM,CAACG,IAAR,CAAZ,EAA6BF,OAAO,CAACC,GAAR,CAAY,WAAZ,CAA7B,CAEMN,SAPT,CAOqBI,MAAM,CAACG,IAP5B,CAQGF,OAAO,CAACC,GAAR,CAAYN,SAAZ,EACAC,YAAY,CAACD,SAAD,CAAZ,CACAK,OAAO,CAACC,GAAR,CAAYL,YAAZ,EAVH,gCAWUA,YAXV,wDAAD,KAiBD,CAlBQ,CAAT,CAwBJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EA7C4B,CAoDxB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAEA,GAAMO,CAAAA,MAAM,CAAG,CACXC,iBAAiB,CAAE,CACfC,KAAK,CAAE,uBADQ,CAEfC,MAAM,CAAE,GAFO,CAGfC,QAAQ,CAAE,MAHK,CAIfC,SAAS,CAAE,GAJI,CAKfC,YAAY,CAAE,GALC,CADR,CAQXC,cAAc,CAAE,CACZL,KAAK,CAAE,SADK,CAEZG,SAAS,CAAE,KAFC,CAGZG,SAAS,CAAE,MAHC,CAIZC,UAAU,CAAE,KAJA,CAKZC,UAAU,CAAE,4CALA,CAMZJ,YAAY,CAAE,KANF,CAOZK,cAAc,CAAE,MAPJ,CARL,CAAf,CAkBA,GAAMC,CAAAA,SAAS,CAAG/B,UAAU,CAACmB,MAAD,CAA5B,CAEA,GAAMa,CAAAA,OAAO,CAAGD,SAAS,EAAzB,CAGI,mBAEI,MAAC,QAAD,yBAEA,YAAK,SAAS,CAAC,eAAf,uBACA,sCACI,oCACI,mCACI,aADJ,cAEI,oCAFJ,cAGI,wCAHJ,cAII,4BAJJ,GADJ,EADJ,cAUI,uBACKpB,SAAS,CAACsB,GAAV,CAAc,SAACtB,SAAD,qBAAiB,iCAChC,mCACI,oBAAKC,YAAY,CAACsB,OAAlB,EADJ,cAEI,oBAAKtB,YAAY,CAACuB,YAAlB,EAFJ,cAGI,oBAAKvB,YAAY,CAACwB,gBAAlB,EAHJ,cAII,oBAAKxB,YAAY,CAACyB,IAAlB,EAJJ,GADgC,EAAS1B,SAAS,CAAC2B,GAAnB,CAAjB,EAAd,CADL,EAVJ,GADA,EAFA,cA8BI,MAAC,IAAD,yBACI,KAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,uBACI,gDADJ,EADJ,cAII,KAAC,QAAD,wBACI,MAAC,aAAD,yBACI,KAAC,QAAD,EAAU,EAAE,CAAE,EAAd,CAAkB,EAAE,CAAE,EAAtB,CAA0B,EAAE,CAAE,CAA9B,uBACI,cACI,SAAS,CAAC,eADd,CAEI,WAAW,CAAC,SAFhB,CAGI,IAAI,CAAC,MAHT,CAII,IAAI,CAAC,SACL;AACA;AANJ,EADJ,EADJ,cAWI,KAAC,QAAD,EAAU,EAAE,CAAE,EAAd,CAAkB,EAAE,CAAE,EAAtB,CAA0B,EAAE,CAAE,CAA9B,uBACI,cACI,SAAS,CAAC,qBADd,CAEI,WAAW,CAAC,eAFhB,CAGI,IAAI,CAAC,MAHT,CAII,IAAI,CAAC,cACL;AACA;AANJ,EADJ,EAXJ,cAqBI,KAAC,QAAD,EAAU,EAAE,CAAE,EAAd,CAAkB,EAAE,CAAE,EAAtB,CAA0B,EAAE,CAAE,CAA9B,uBACI,cACI,SAAS,CAAC,eADd,CAEI,WAAW,CAAC,SAFhB,CAGI,IAAI,CAAC,MAHT,CAII,IAAI,CAAC,kBACL;AACA;AANJ,EADJ,EArBJ,GADJ,EAJJ,cAsCI,KAAC,UAAD,wBAEI,KAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,oBAFJ,EAtCJ,GA9BJ,cA2EI,aA3EJ,cA4EI,MAAC,IAAD,yBACI,KAAC,UAAD,EAAY,KAAK,CAAC,SAAlB,uBACI,WAAI,SAAS,CAAEN,OAAO,CAACN,cAAvB,yCADJ,EADJ,cAII,KAAC,QAAD,wBAEQ,KAAC,KAAD,EAAO,EAAE,CAAC,SAAV,CACI,gBAAgB,CAAC,SADrB,CAEI,SAAS,CAAE,CAAE,gBAAF,CAAoB,eAApB,CAAqC,oBAArC,CAA2D,WAA3D,CAFf,CAGI,SAAS,CAAE,CACP;AAChC;AACA;AACA;AACA,sGALuC,CAHf,EAFR,EAJJ,GA5EJ,GAFJ,CA0GC,CAhPL,CA2PI,cAAehB,CAAAA,aAAfsourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\nimport Table from \"components/Table/Table.js\";\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\n//import CustomInput from \"components/CustomInput/CustomInput.js\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n//import CardAvatar from \"components/Card/CardAvatar.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardFooter from \"components/Card/CardFooter.js\";\r\nimport axios from \"axios\";\r\n\r\n//import axios from \"axios\";\r\n\r\n\r\n\r\n\r\n\r\nconst LocationRoute = () => {\r\n\r\n   \r\n    const [dataArray, setDataArray] = useState([]);\r\n\r\n    useEffect(() => {\r\n      (async () => {\r\n            const result = await axios.get(`http://localhost:5000/locations`, {\r\n                method: \"GET\"\r\n            });\r\n          \r\n          console.log([result.data]) + console.log(\"data here\")\r\n          \r\n          const dataArray =(result.data);\r\n          console.log(dataArray)  \r\n          setDataArray(dataArray)\r\n          console.log(setDataArray)  \r\n          return(setDataArray)\r\n          \r\n \r\n        })();\r\n\r\n       \r\n    } );\r\n\r\n\r\n    \r\n   \r\n     \r\n/*\r\n    buildTable(data)\r\n\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const result = await axios.get(`http://localhost:5000/locations`, {\r\n                method: \"GET\"\r\n            });\r\n          \r\n          console.log(result.data) + console.log(\"data here\")\r\n          \r\n          const dataArray = JSON.stringify(result)\r\n          console.log(dataArray)\r\n          setData(result);\r\n          console.log(setData)\r\n*/\r\n          \r\n\r\n          \r\n         \r\n       \r\n\r\n    /*    function buildTable(){\r\n\r\n           \r\n\r\n\r\n   \r\n\r\n            if(document.getElementById('myTable') != null){\r\n    \r\n            for (var i = 0; i < data.length; i++){\r\n                var row = `<tr>\r\n                                <td>${dataArray[i].zipcode}</td>\r\n                                <td>${dataArray[i].storage_type}</td>\r\n                                <td>${dataArray[i].location_address}</td>\r\n                                <td>${dataArray[i].size}</td>\r\n                               \r\n                          </tr>`\r\n                         \r\n                          if(document.getElementById(\"zipcode\") != null){\r\n                            table.innerHTML += row;\r\n                        }\r\n                table.innerHTML += row\r\n    \r\n                return (\r\n                    <td>{dataArray.zipcode}</td>\r\n             \r\n                    );\r\n                }\r\n                \r\n                  \r\n               \r\n            }\r\n        }\r\nconst App = () => {\r\n    return <div className=\"app-container\">\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th>Zipcode</th>\r\n                    <th>Storage Type</th>\r\n                    <th>Location Address</th>\r\n                    <th>Size</th>\r\n                </tr>\r\n\r\n            </thead>\r\n            <tbody>\r\n                <tr>\r\n                    <td>test1</td>\r\n                    <td>test2</td>\r\n                    <td>test3</td>\r\n                    <td>test4</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n}\r\n*/\r\n\r\nconst styles = {\r\n    cardCategoryWhite: {\r\n        color: \"rgba(255,255,255,.62)\",\r\n        margin: \"0\",\r\n        fontSize: \"14px\",\r\n        marginTop: \"0\",\r\n        marginBottom: \"0\",\r\n    },\r\n    cardTitleWhite: {\r\n        color: \"#FFFFFF\",\r\n        marginTop: \"0px\",\r\n        minHeight: \"auto\",\r\n        fontWeight: \"300\",\r\n        fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n        marginBottom: \"3px\",\r\n        textDecoration: \"none\",\r\n    },\r\n};\r\nconst useStyles = makeStyles(styles);\r\n\r\nconst classes = useStyles();\r\n\r\n   \r\n    return (\r\n        \r\n        <Fragment>\r\n             \r\n        <div className=\"app-container\">\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Storage Type</th>\r\n                    <th>Location Address</th>\r\n                    <th>Size</th>\r\n                </tr>\r\n\r\n            </thead>\r\n            <tbody>\r\n                {dataArray.map((dataArray)=> (  <li key={dataArray.key} >\r\n                <tr>\r\n                    <td>{setDataArray.zipcode}</td>\r\n                    <td>{setDataArray.storage_type}</td>\r\n                    <td>{setDataArray.location_address}</td>\r\n                    <td>{setDataArray.Size}</td>\r\n                    \r\n                </tr>\r\n                </li>\r\n                ))}\r\n               \r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n        \r\n            <Card>\r\n                <CardHeader color=\"primary\">\r\n                    <h4>Filter Available Storage</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    <GridContainer>\r\n                        <GridItem xs={12} sm={12} md={4}>\r\n                            <input\r\n                                className=\"zipcode-input\"\r\n                                placeholder=\"Zipcode\"\r\n                                type=\"text\"\r\n                                name=\"zipcode\"\r\n                                //value={zipcode}\r\n                                //onChange={e => onChange(e)}\r\n                            />\r\n                        </GridItem>\r\n                        <GridItem xs={12} sm={12} md={4}>\r\n                            <input\r\n                                className=\"storage-space-input\"\r\n                                placeholder=\"Storage Space\"\r\n                                type=\"text\"\r\n                                name=\"storage_type\"\r\n                                //value={storage_type}\r\n                                //onChange={e => onChange(e)}\r\n                            />\r\n                        </GridItem>\r\n                        <GridItem xs={12} sm={12} md={4}>\r\n                            <input\r\n                                className=\"address-input\"\r\n                                placeholder=\"Address\"\r\n                                type=\"text\"\r\n                                name=\"location_address\"\r\n                                //value={location_address}\r\n                                //onChange={e => onChange(e)}\r\n                            />\r\n                        </GridItem>\r\n                    </GridContainer>\r\n                </CardBody>\r\n                <CardFooter>\r\n\r\n                    <Button color=\"primary\"\r\n                    \r\n                    >Search</Button>\r\n                </CardFooter>\r\n            </Card>\r\n            <br></br>\r\n            <Card>\r\n                <CardHeader color=\"primary\">\r\n                    <h4 className={classes.cardTitleWhite}>Current Available Locations</h4>\r\n                </CardHeader>\r\n                <CardBody>\r\n                    \r\n                        <Table id=\"myTable\"\r\n                            tableHeaderColor=\"primary\"\r\n                            tableHead={[ \" Storage Type \", \" Size (sqft) \", \" Location Address \", \" Zipcode \"]}\r\n                            tableData={[\r\n                                /*[data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],\r\n                                [data.storage_type, data.size, data.location_address, data.zipcode],*/\r\n                            ]}\r\n                        />\r\n                    \r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>\r\n\r\n        \r\n    )\r\n\r\n    \r\n\r\n    \r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n      \r\n    \r\n       \r\n\r\n    export default LocationRoute;\r\n\r\n /*\r\n        const [info4, setInfo4] = useState([]);\r\n\r\n        async function getInfo4() {\r\n            const res = await fetch(`http://localhost:5000/locations/4`, {\r\n                method: \"GET\"\r\n            });\r\n            const info4Array = await res.json();\r\n            setInfo4(info4Array);\r\n     \r\n       const info3Array = await res.json();\r\n        setInfo3(info3Array);\r\n        \r\n       // console.log(info3Array)\r\n    \r\n\r\n    const onSubmitForm = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const body = { username, first_name, last_name, city, country, info, addy, email, postal_code };\r\n            const response = await fetch(\"http://localhost:5000/prof/3\", {\r\n                method: \"GET\",\r\n                headers: { \"Content-Type\": \"application/json\" },\r\n                body: JSON.stringify(body)\r\n            });\r\n            window.location = \"/admin/user\"\r\n            console.log(response);\r\n            console.log(\"please work.\")\r\n        } catch (err) {\r\n            console.error(err.message);\r\n        }\r\n    };\r\n\r\n    const response = \r\n\r\n    useEffect(() => {\r\n        getInfo3();\r\n    }, []);\r\n\r\n    //location id 4\r\n    const [info4, setInfo4] = useState([]);\r\n\r\n    async function getInfo4() {\r\n        const res = await fetch(`http://localhost:5000/locations/4`, {\r\n            method: \"GET\"\r\n        });\r\n        const info4Array = await res.json();\r\n        setInfo4(info4Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo4();\r\n    }, []);\r\n\r\n    //location id 5\r\n    const [info5, setInfo5] = useState([]);\r\n\r\n    async function getInfo5() {\r\n        const res = await fetch(`http://localhost:5000/locations/5`, {\r\n            method: \"GET\"\r\n        });\r\n        const info5Array = await res.json();\r\n        setInfo5(info5Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo5();\r\n    }, []);\r\n\r\n    //location id 6\r\n    const [info6, setInfo6] = useState([]);\r\n\r\n    async function getInfo6() {\r\n        const res = await fetch(`http://localhost:5000/locations/6`, {\r\n            method: \"GET\"\r\n        });\r\n        const info6Array = await res.json();\r\n        setInfo6(info6Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo6();\r\n    }, []);\r\n\r\n    //location id 7\r\n    const [info7, setInfo7] = useState([]);\r\n\r\n    async function getInfo7() {\r\n        const res = await fetch(`http://localhost:5000/locations/7`, {\r\n            method: \"GET\"\r\n        });\r\n        const info7Array = await res.json();\r\n        setInfo7(info7Array);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo7();\r\n    }, []);\r\n    */\r\n\r\n    \r\n\r\n\r\n/*\r\n                        <GridItem xs={12} sm={12} md={4}>\r\n                            <input\r\n                                className=\"use-time-input\"\r\n                                placeholder=\"Use Time\"\r\n                                type=\"text\"\r\n                                name=\"time_need\"\r\n                                //value={time_need}\r\n                                //onChange={e => onChange(e)}\r\n                            />\r\n                        </GridItem>\r\n*/"]},"metadata":{},"sourceType":"module"}