{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _slicedToArray from \"C:/Users/nbins/Documents/GitHub/SRSRSR/Template/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nbins\\\\Documents\\\\GitHub\\\\SRSRSR\\\\Template\\\\src\\\\views\\\\UserProfile\\\\ProfileInfo.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport _regeneratorRuntime from \"C:\\\\Users\\\\nbins\\\\Documents\\\\GitHub\\\\SRSRSR\\\\Template\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Table from \"components/Table/Table.js\";\nimport GridItem from \"components/Grid/GridItem\";\nimport GridContainer from \"components/Grid/GridContainer\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; //import InputLabel from \"@material-ui/core/InputLabel\";\n// core components\n//import GridItem from \"components/Grid/GridItem.js\";\n//import GridContainer from \"components/Grid/GridContainer.js\";\n//import CustomInput from \"components/CustomInput/CustomInput.js\";\n//import Button from \"components/CustomButtons/Button.js\";\n\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\"; //import CardAvatar from \"components/Card/CardAvatar.js\";\n\nimport CardBody from \"components/Card/CardBody.js\"; //import CardFooter from \"components/Card/CardFooter.js\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ProfileInfo = function ProfileInfo() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      info = _useState2[0],\n      setInfo = _useState2[1];\n\n  function getInfo() {\n    return _getInfo.apply(this, arguments);\n  }\n\n  function _getInfo() {\n    _getInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, infoArray;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/prof/3\");\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              infoArray = _context.sent;\n              setInfo(infoArray);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _getInfo.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    getInfo();\n  }, []);\n  var styles = {\n    cardCategoryWhite: {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    cardTitleWhite: {\n      color: \"#FFFFFF\",\n      marginTop: \"0px\",\n      minHeight: \"auto\",\n      fontWeight: \"300\",\n      fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n      marginBottom: \"3px\",\n      textDecoration: \"none\"\n    }\n  };\n  var useStyles = makeStyles(styles);\n  var classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(GridItem, {\n      xs: 20,\n      sm: 20,\n      md: 15,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          color: \"primary\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: classes.cardTitleWhite,\n            children: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: classes.cardCategoryWhite,\n            children: \"Current profile information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(CardBody, {\n          children: /*#__PURE__*/_jsxDEV(GridContainer, {\n            children: /*#__PURE__*/_jsxDEV(Table //key={info.prof_id}\n            , {\n              tableHeaderColor: \"primary\",\n              tableHead: [\"Your information: \"],\n              tableData: [[\"Username - \", info.username], [\"Email - \", info.email], [\"First Name - \", info.first_name], [\"Last Name - \", info.last_name], [\"Street Address - \", info.addy], [\"Postal Code - \", info.postal_code], [\"City - \", info.city], [\"State - \", info.country], [\"Info - \", info.info]]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ProfileInfo, \"HUiktqBuLjEgNgTkz3j9/0iQeoU=\", true);\n\n_c = ProfileInfo;\nexport default ProfileInfo;\n/*\r\n<table className=\"table mt-5\">\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Email Address</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Street Address</th>\r\n            <th>Postal Code</th>\r\n            <th>City</th>\r\n            <th>Country</th>\r\n            <th>Info</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr key={info.prof_id}>\r\n              <td>{info.username}</td>\r\n              <td>{info.first_name}</td>\r\n              <td>{info.last_name}</td>\r\n              <td>{info.addy}</td>\r\n              <td>{info.postal_code}</td>\r\n              <td>{info.city}</td>\r\n              <td>{info.country}</td>\r\n              <td>{info.info}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"sources":["C:/Users/nbins/Documents/GitHub/SRSRSR/Template/src/views/UserProfile/ProfileInfo.js"],"names":["React","Fragment","useState","useEffect","Table","GridItem","GridContainer","makeStyles","Card","CardHeader","CardBody","ProfileInfo","info","setInfo","getInfo","fetch","res","json","infoArray","styles","cardCategoryWhite","color","margin","fontSize","marginTop","marginBottom","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","useStyles","classes","username","email","first_name","last_name","addy","postal_code","city","country"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport Table from \"components/Table/Table.js\";\r\nimport GridItem from \"components/Grid/GridItem\";\r\nimport GridContainer from \"components/Grid/GridContainer\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n//import InputLabel from \"@material-ui/core/InputLabel\";\r\n// core components\r\n//import GridItem from \"components/Grid/GridItem.js\";\r\n//import GridContainer from \"components/Grid/GridContainer.js\";\r\n//import CustomInput from \"components/CustomInput/CustomInput.js\";\r\n//import Button from \"components/CustomButtons/Button.js\";\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n//import CardAvatar from \"components/Card/CardAvatar.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\n//import CardFooter from \"components/Card/CardFooter.js\";\r\n\r\nconst ProfileInfo = () => {\r\n    const [info, setInfo] = useState([]);\r\n\r\n    async function getInfo() {\r\n        const res = await fetch(\"/prof/3\"); //`/prof/${id}`\r\n        const infoArray = await res.json();\r\n        setInfo(infoArray);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getInfo();\r\n    }, []);\r\n\r\n    const styles = {\r\n        cardCategoryWhite: {\r\n            color: \"rgba(255,255,255,.62)\",\r\n            margin: \"0\",\r\n            fontSize: \"14px\",\r\n            marginTop: \"0\",\r\n            marginBottom: \"0\",\r\n        },\r\n        cardTitleWhite: {\r\n            color: \"#FFFFFF\",\r\n            marginTop: \"0px\",\r\n            minHeight: \"auto\",\r\n            fontWeight: \"300\",\r\n            fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\r\n            marginBottom: \"3px\",\r\n            textDecoration: \"none\",\r\n        },\r\n    };\r\n    const useStyles = makeStyles(styles);\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Fragment>\r\n            {\" \"}\r\n            <GridItem xs={20} sm={20} md={15}>\r\n                <Card>\r\n                    <CardHeader color=\"primary\">\r\n                        <h4 className={classes.cardTitleWhite}>Profile</h4>\r\n                        <p className={classes.cardCategoryWhite}>Current profile information</p>\r\n                    </CardHeader>\r\n                    <CardBody>\r\n                        <GridContainer>\r\n                            <Table\r\n                                //key={info.prof_id}\r\n                                tableHeaderColor=\"primary\"\r\n                                tableHead={[\"Your information: \"]}\r\n                                tableData={[\r\n                                    [\"Username - \", info.username],\r\n                                    [\"Email - \", info.email],\r\n                                    [\"First Name - \", info.first_name], \r\n                                    [\"Last Name - \", info.last_name], \r\n                                    [\"Street Address - \", info.addy],\r\n                                    [\"Postal Code - \", info.postal_code], \r\n                                    [\"City - \", info.city],\r\n                                    [\"State - \", info.country],\r\n                                    [\"Info - \", info.info]\r\n                                ]}\r\n                            />\r\n                        </GridContainer>\r\n                    </CardBody>\r\n                </Card>\r\n            </GridItem>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;\r\n\r\n/*\r\n<table className=\"table mt-5\">\r\n        <thead>\r\n          <tr>\r\n            <th>Username</th>\r\n            <th>Email Address</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Street Address</th>\r\n            <th>Postal Code</th>\r\n            <th>City</th>\r\n            <th>Country</th>\r\n            <th>Info</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr key={info.prof_id}>\r\n              <td>{info.username}</td>\r\n              <td>{info.first_name}</td>\r\n              <td>{info.last_name}</td>\r\n              <td>{info.addy}</td>\r\n              <td>{info.postal_code}</td>\r\n              <td>{info.city}</td>\r\n              <td>{info.country}</td>\r\n              <td>{info.info}</td>\r\n            </tr>\r\n        </tbody>\r\n      </table>\r\n*/"]},"metadata":{},"sourceType":"module"}